// <auto-generated />
using System;
using DoubleAlphaSapphire.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DoubleAlphaSapphire.Data.Migrations
{
    [DbContext(typeof(DasDbContext))]
    partial class DasDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DoubleAlphaSapphire.Data.Battle", b =>
                {
                    b.Property<Guid>("BattleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("battle_id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("AttemptNumber")
                        .HasColumnType("integer")
                        .HasColumnName("attempt_number");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid")
                        .HasColumnName("player_id");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("uuid")
                        .HasColumnName("trainer_id");

                    b.HasKey("BattleId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TrainerId");

                    b.ToTable("battles", (string)null);
                });

            modelBuilder.Entity("DoubleAlphaSapphire.Data.BattlePokemon", b =>
                {
                    b.Property<Guid>("BattlePokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("battle_pokemon_id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("BattleId")
                        .HasColumnType("uuid")
                        .HasColumnName("battle_id");

                    b.Property<int>("DexId")
                        .HasColumnType("integer")
                        .HasColumnName("dex_id");

                    b.Property<bool>("IsFainted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_fainted");

                    b.Property<bool>("IsLead")
                        .HasColumnType("boolean")
                        .HasColumnName("is_lead");

                    b.HasKey("BattlePokemonId");

                    b.HasIndex("BattleId");

                    b.HasIndex("DexId");

                    b.ToTable("battle_pokemon", (string)null);
                });

            modelBuilder.Entity("DoubleAlphaSapphire.Data.Player", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("player_id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("text")
                        .HasColumnName("player_name");

                    b.HasKey("PlayerId");

                    b.ToTable("players", (string)null);
                });

            modelBuilder.Entity("DoubleAlphaSapphire.Data.Pokemon", b =>
                {
                    b.Property<int>("DexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dex_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DexId"));

                    b.Property<string>("PokemonName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("text")
                        .HasColumnName("pokemon_name");

                    b.HasKey("DexId");

                    b.ToTable("pokemon", (string)null);
                });

            modelBuilder.Entity("DoubleAlphaSapphire.Data.Trainer", b =>
                {
                    b.Property<Guid>("TrainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("trainer_id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("TrainerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("text")
                        .HasColumnName("trainer_name");

                    b.HasKey("TrainerId");

                    b.ToTable("trainers", (string)null);
                });

            modelBuilder.Entity("DoubleAlphaSapphire.Data.Battle", b =>
                {
                    b.HasOne("DoubleAlphaSapphire.Data.Player", "Player")
                        .WithMany("Battles")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoubleAlphaSapphire.Data.Trainer", "Trainer")
                        .WithMany("Battles")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("DoubleAlphaSapphire.Data.BattlePokemon", b =>
                {
                    b.HasOne("DoubleAlphaSapphire.Data.Battle", "Battle")
                        .WithMany("BattlePokemon")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoubleAlphaSapphire.Data.Pokemon", "Pokemon")
                        .WithMany("BattlePokemon")
                        .HasForeignKey("DexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Battle");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("DoubleAlphaSapphire.Data.Battle", b =>
                {
                    b.Navigation("BattlePokemon");
                });

            modelBuilder.Entity("DoubleAlphaSapphire.Data.Player", b =>
                {
                    b.Navigation("Battles");
                });

            modelBuilder.Entity("DoubleAlphaSapphire.Data.Pokemon", b =>
                {
                    b.Navigation("BattlePokemon");
                });

            modelBuilder.Entity("DoubleAlphaSapphire.Data.Trainer", b =>
                {
                    b.Navigation("Battles");
                });
#pragma warning restore 612, 618
        }
    }
}
